general:
  listen_addr:        127.0.0.1
  listen_port:        8670
  charset:            utf-8
  content_type:       'application/json; charset=utf-8'
  max_workers:        5
  lock_timeout:       60
  redis:
    nsaproxy:
      url:            'redis://127.0.0.1:6379?db=0'
  pdns:
     api_uri:     'http://localhost:8081'
#    credentials: file:///etc/nsaproxy/credentials.yml
plugins:
  cdns:
    deployment: production # null, staging or production
    credentials: file:///etc/nsaproxy/credentials.yml
#    soa:
#      default:
#        email_address: 'foo@example.org'
#    exclude:
#      'example.com': '*'
#      'example.net':
#        'AAAA': '*'
#      'example.org':
#        'CNAME':
#          - '*.example.org.'
  r53:
    credentials: file:///etc/nsaproxy/credentials.yml
modules:
  pdns:
    routes:
      api_cache_flush:
        handler:   'api_cache_flush'
        name:      'api/v1/servers/localhost/cache/flush'
        op:        'PUT'
      api_endpoint_get:
        handler:   'api_endpoint_get'
        regexp:    '^api/v1/servers/(?P<server_id>[^\/]+)/(?P<endpoint>[^\/]+)(?:/(?P<id>[a-zA-Z0-9\.\-]+))?$'
        op:        'GET'
        safe_init: true
      api_endpoint_put:
        handler:   'api_endpoint_put'
        regexp:    '^api/v1/servers/(?P<server_id>[^\/]+)/(?P<endpoint>[^\/]+)/(?P<id>[a-zA-Z0-9\.\-]+)/(?P<command>axfr-retrieve|notify)$'
        op:        'PUT'
      api_endpoint_post:
        handler:   'api_endpoint_post'
        regexp:    '^api/v1/servers/(?P<server_id>[^\/]+)/(?P<endpoint>[^\/]+)$'
        op:        'POST'
      api_endpoint_patch:
        handler:   'api_endpoint_patch'
        regexp:    '^api/v1/servers/(?P<server_id>[^\/]+)/(?P<endpoint>[^\/]+)/(?P<id>[a-zA-Z0-9\.\-]+)$'
        op:        'PATCH'
      api_endpoint_delete:
        handler:   'api_endpoint_delete'
        regexp:    '^api/v1/servers/(?P<server_id>[^\/]+)/(?P<endpoint>[^\/]+)/(?P<id>[a-zA-Z0-9\.\-]+)$'
        op:        'DELETE'
